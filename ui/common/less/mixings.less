.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after { clear: both;}
}


.font (@font-name, @font-file, @font-weight: normal, @font-style: normal) {
  @font-face {
    font-family: @font-name;
    src: url('@{font-file}.woff2') format('woff2'),
      url('@{font-file}.woff') format('woff'),
      url('@{font-file}.ttf') format('truetype');
    font-weight: @font-weight;
    font-style: @font-style;
  }
}

.transition(@property, @duration, @style: cubic-bezier(0.860, 0.000, 0.070, 1.000)) {
  transition+: @property @duration @style;
}

.transition-transform (@duration, @style: cubic-bezier(0.860, 0.000, 0.070, 1.000)) {
  transition+: transform @duration @style;
}
.clear-transition () { transition: none; }

// Transform Tools
.transform (...) {
  transform+_: @arguments;
}

.rotate (@deg) { .transform(rotate(@deg)); }
.rotateX (@deg) { .transform(rotateX(@deg)); }
.rotateY (@deg) { .transform(rotateY(@deg)); }
.rotateZ (@deg) { .transform(rotateZ(@deg)); }

.scale (@ratio) { .transform(scale(@ratio));}
.scaleX (@ratio) { .transform(scaleX(@ratio)); }
.scaleY (@ratio) { .transform(scaleY(@ratio)); }

.translate (@x, @y) { .transform(translate(@x, @y)); }
.translateX (@x:0) { .transform(translateX(@x)); }
.translateY (@y:0) { .transform(translateY(@y)); }
.translateZ (@z:0) { .transform(translateZ(@z)); }

.clearTransform () { transform: none !important; }


.fadein (@delay: 0.3s) {
  visibility:visible;
  opacity:1;
  transition:visibility 0s ease-in-out @delay, all @delay ease-in-out;
}

.fadeout (@delay: 0.3s) {
  visibility:hidden;
  opacity:0;
  transition:visibility 0s ease-in-out @delay, all @delay ease-in-out;
}

//Typography

.hyphenation() {
  word-break: break-all;
  word-break: break-word;
  hyphens: auto;
  -webkit-hyphenate-before: 2;
  -webkit-hyphenate-after: 3;
  hyphenate-lines: 3;
}

.ligatures() {
  font-feature-settings: "liga", "dlig";
}

// Other stuff

.circle(@diameter: 20px) {
  width: @diameter;
  height: @diameter;
  border-radius: 50%;
}

.placeholder(@color) {
  &:-moz-placeholder { color: @color; }
  &:-ms-input-placeholder { color: @color; }
  &::-webkit-input-placeholder { color: @color;}
}

.a(@color, @hover, @text-decoration: none, @text-decoration-hover: none) {
  & { .transition(all, 150ms) }
  &:link, &:visited { color: @color; text-decoration: @text-decoration;}
  &:hover, &:focus { color: @hover; text-decoration: @text-decoration-hover;}
}

